package dictionary.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Definition;
  private ConceptPresentation props_Dictionary;
  private ConceptPresentation props_NounWord;
  private ConceptPresentation props_NounWordRef;
  private ConceptPresentation props_WordStore;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Definition:
        if (props_Definition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Definition");
          props_Definition = cpb.create();
        }
        return props_Definition;
      case LanguageConceptSwitch.Dictionary:
        if (props_Dictionary == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Dictionary");
          props_Dictionary = cpb.create();
        }
        return props_Dictionary;
      case LanguageConceptSwitch.NounWord:
        if (props_NounWord == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_NounWord = cpb.create();
        }
        return props_NounWord;
      case LanguageConceptSwitch.NounWordRef:
        if (props_NounWordRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x1e23d6051cdb4db4L, 0x810f1fa070d0e977L, 0x3019678390111cc8L, 0x197de3ddaba9503bL, "originalWord", "", "");
          props_NounWordRef = cpb.create();
        }
        return props_NounWordRef;
      case LanguageConceptSwitch.WordStore:
        if (props_WordStore == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("WordStore");
          props_WordStore = cpb.create();
        }
        return props_WordStore;
    }
    return null;
  }
}
