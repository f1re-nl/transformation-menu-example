package dictionary.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Definition = 0;
  public static final int Dictionary = 1;
  public static final int NounWord = 2;
  public static final int NounWordRef = 3;
  public static final int WordStore = 4;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x1e23d6051cdb4db4L, 0x810f1fa070d0e977L);
    builder.put(0x3b06478f679138dcL, Definition);
    builder.put(0x3019678390138204L, Dictionary);
    builder.put(0x3b06478f679138c0L, NounWord);
    builder.put(0x3019678390111cc8L, NounWordRef);
    builder.put(0x3b06478f679138bbL, WordStore);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
